Usage:
    jmap -clstats <pid>
        to connect to running process and print class loader statistics
    jmap -finalizerinfo <pid>
        to connect to running process and print information on objects awaiting finalization
    jmap -histo[:[<histo-options>]] <pid>
        to connect to running process and print histogram of java object heap
    jmap -dump:<dump-options> <pid>
        to connect to running process and dump java heap
    jmap -? -h --help
        to print this help message

    dump-options:
      live         dump only live objects (takes precedence if both "live" and "all" are specified)
      all          dump all objects in the heap (default if one of "live" or "all" is not specified)
      format=b     binary format
      file=<file>  dump heap to <file>
      gz=<number>  If specified, the heap dump is written in gzipped format using the given compression level.
                   1 (recommended) is the fastest, 9 the strongest compression.

    Example: jmap -dump:live,format=b,file=heap.bin <pid>

    histo-options:
      live                count only live objects (takes precedence if both "live" and "all" are specified)
      all                 count all objects in the heap (default if one of "live" or "all" is not specified)
      file=<file>         dump data to <file>
      parallel=<number>   Number of parallel threads to use for heap inspection:
                          0 (the default) means let the VM determine the number of threads to use
                          1 means use one thread (disable parallelism).
                          For any other value the VM will try to use the specified number of threads, but might use fewer.

    Example: jmap -histo:live,file=/tmp/histo.data <pid>
