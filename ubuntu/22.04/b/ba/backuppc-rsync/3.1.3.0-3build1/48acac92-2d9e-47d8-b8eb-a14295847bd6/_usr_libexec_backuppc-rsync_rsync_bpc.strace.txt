479   execve("/usr/libexec/backuppc-rsync/rsync_bpc", ["/usr/libexec/backuppc-rsync/rsync_bpc"], 0x7ffe29e31580 /* 12 vars */) = 0
479   brk(NULL)                         = 0x55abe2fcc000
479   arch_prctl(0x3001 /* ARCH_??? */, 0x7ffd91e64360) = -1 EINVAL (Invalid argument)
479   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f37cb731000
479   access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
479   openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
479   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=6193, ...}, AT_EMPTY_PATH) = 0
479   mmap(NULL, 6193, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f37cb72f000
479   close(3)                          = 0
479   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libacl.so.1", O_RDONLY|O_CLOEXEC) = 3
479   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0H\201\0\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\34\0\33\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0000\24\0\0\0\0\0\0000\24\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
479   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=34888, ...}, AT_EMPTY_PATH) = 0
479   mmap(NULL, 36896, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f37cb725000
479   mprotect(0x7f37cb727000, 24576, PROT_NONE) = 0
479   mmap(0x7f37cb727000, 16384, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f37cb727000
479   mmap(0x7f37cb72b000, 4096, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6000) = 0x7f37cb72b000
479   mmap(0x7f37cb72d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7f37cb72d000
479   close(3)                          = 0
479   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
479   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\10\242\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\37\0\0\0\0\0\08\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
479   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=108936, ...}, AT_EMPTY_PATH) = 0
479   mmap(NULL, 110776, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f37cb709000
479   mprotect(0x7f37cb70b000, 98304, PROT_NONE) = 0
479   mmap(0x7f37cb70b000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f37cb70b000
479   mmap(0x7f37cb71c000, 24576, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7f37cb71c000
479   mmap(0x7f37cb723000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f37cb723000
479   close(3)                          = 0
479   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libpopt.so.0", O_RDONLY|O_CLOEXEC) = 3
479   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0`\303\0\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\34\0\33\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\37\0\0\0\0\0\0\30\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
479   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=51808, ...}, AT_EMPTY_PATH) = 0
479   mmap(NULL, 53872, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f37cb6fb000
479   mmap(0x7f37cb6fd000, 32768, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f37cb6fd000
479   mmap(0x7f37cb705000, 8192, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xa000) = 0x7f37cb705000
479   mmap(0x7f37cb707000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xb000) = 0x7f37cb707000
479   close(3)                          = 0
479   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
479   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0@\0\0\0\0\0\0\0\360\300!\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0B\0A\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0"..., 832) = 832
479   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
479   pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\2\200\0\300\4\0\0\0\1\0\0\0\0\0\0\0", 48, 848) = 48
479   pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\211\303\313\205\371\345PFwdq\376\320^\304AX\35\31i\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 896) = 68
479   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2216304, ...}, AT_EMPTY_PATH) = 0
479   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
479   mmap(NULL, 2260560, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f37cb4d3000
479   mmap(0x7f37cb4fb000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7f37cb4fb000
479   mmap(0x7f37cb690000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7f37cb690000
479   mmap(0x7f37cb6e8000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x214000) = 0x7f37cb6e8000
479   mmap(0x7f37cb6ee000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f37cb6ee000
479   close(3)                          = 0
479   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f37cb4d1000
479   arch_prctl(ARCH_SET_FS, 0x7f37cb4d2000) = 0
479   set_tid_address(0x7f37cb4d22d0)   = 479
479   set_robust_list(0x7f37cb4d22e0, 24) = 0
479   rseq(0x7f37cb4d29a0, 0x20, 0, 0x53053053) = 0
479   mprotect(0x7f37cb6e8000, 16384, PROT_READ) = 0
479   mprotect(0x7f37cb707000, 4096, PROT_READ) = 0
479   mprotect(0x7f37cb723000, 4096, PROT_READ) = 0
479   mprotect(0x7f37cb72d000, 4096, PROT_READ) = 0
479   mprotect(0x55abe21ea000, 8192, PROT_READ) = 0
479   mprotect(0x7f37cb76b000, 8192, PROT_READ) = 0
479   prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
479   munmap(0x7f37cb72f000, 6193)      = 0
479   rt_sigaction(SIGUSR1, {sa_handler=0x55abe21929b0, sa_mask=[], sa_flags=SA_RESTORER|SA_NOCLDSTOP, sa_restorer=0x7f37cb515520}, NULL, 8) = 0
479   rt_sigaction(SIGUSR2, {sa_handler=0x55abe2197ac0, sa_mask=[], sa_flags=SA_RESTORER|SA_NOCLDSTOP, sa_restorer=0x7f37cb515520}, NULL, 8) = 0
479   rt_sigaction(SIGCHLD, {sa_handler=0x55abe2192c10, sa_mask=[], sa_flags=SA_RESTORER|SA_NOCLDSTOP, sa_restorer=0x7f37cb515520}, NULL, 8) = 0
479   geteuid()                         = 0
479   getegid()                         = 0
479   write(2, "rsync_bpc  version 3.1.3.0  protocol version 31\n", 48) = 48
479   write(2, "Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.\n", 71) = 71
479   write(2, "Web site: http://rsync.samba.org/\n", 34) = 34
479   write(2, "Capabilities:\n", 14)   = 14
479   write(2, "    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,\n", 69) = 69
479   write(2, "    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,\n", 65) = 65
479   write(2, "    append, ACLs, xattrs, iconv, symtimes, no prealloc\n", 55) = 55
479   write(2, "\n", 1)                 = 1
479   write(2, "rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you\n", 73) = 73
479   write(2, "are welcome to redistribute it under certain conditions.  See the GNU\n", 70) = 70
479   write(2, "General Public Licence for details.\n", 36) = 36
479   write(2, "\n", 1)                 = 1
479   write(2, "rsync_bpc is special version of rsync for BackupPC.\n", 52) = 52
479   write(2, "\n", 1)                 = 1
479   write(2, "Usage: rsync [OPTION]... SRC [SRC]... DEST\n", 43) = 43
479   write(2, "  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST\n", 55) = 55
479   write(2, "  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST\n", 56) = 56
479   write(2, "  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST\n", 70) = 70
479   write(2, "  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]\n", 48) = 48
479   write(2, "  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]\n", 49) = 49
479   write(2, "  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]\n", 63) = 63
479   write(2, "The ':' usages connect via remote shell, while '::' & 'rsync://' usages connect\n", 80) = 80
479   write(2, "to an rsync daemon, and require SRC or DEST to start with a module name.\n", 73) = 73
479   write(2, "\n", 1)                 = 1
479   write(2, "Options\n", 8)          = 8
479   write(2, " -v, --verbose               increase verbosity\n", 48) = 48
479   write(2, "     --info=FLAGS            fine-grained informational verbosity\n", 66) = 66
479   write(2, "     --debug=FLAGS           fine-grained debug verbosity\n", 58) = 58
479   write(2, "     --msgs2stderr           special output handling for debugging\n", 67) = 67
479   write(2, " -q, --quiet                 suppress non-error messages\n", 57) = 57
479   write(2, "     --no-motd               suppress daemon-mode MOTD (see manpage caveat)\n", 76) = 76
479   write(2, " -c, --checksum              skip based on checksum, not mod-time & size\n", 73) = 73
479   write(2, " -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)\n", 73) = 73
479   write(2, "     --no-OPTION             turn off an implied OPTION (e.g. --no-D)\n", 70) = 70
479   write(2, " -r, --recursive             recurse into directories\n", 54) = 54
479   write(2, " -R, --relative              use relative path names\n", 53) = 53
479   write(2, "     --no-implied-dirs       don't send implied dirs with --relative\n", 69) = 69
479   write(2, " -b, --backup                make backups (see --suffix & --backup-dir)\n", 72) = 72
479   write(2, "     --backup-dir=DIR        make backups into hierarchy based in DIR\n", 70) = 70
479   write(2, "     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)\n", 76) = 76
479   write(2, " -u, --update                skip files that are newer on the receiver\n", 71) = 71
479   write(2, "     --inplace               update destination files in-place (SEE MAN PAGE)\n", 78) = 78
479   write(2, "     --append                append data onto shorter files\n", 60) = 60
479   write(2, "     --append-verify         like --append, but with old data in file checksum\n", 79) = 79
479   write(2, " -d, --dirs                  transfer directories without recursing\n", 68) = 68
479   write(2, " -l, --links                 copy symlinks as symlinks\n", 55) = 55
479   write(2, " -L, --copy-links            transform symlink into referent file/dir\n", 70) = 70
479   write(2, "     --copy-unsafe-links     only \"unsafe\" symlinks are transformed\n", 68) = 68
479   write(2, "     --safe-links            ignore symlinks that point outside the source tree\n", 80) = 80
479   write(2, "     --munge-links           munge symlinks to make them safer (but unusable)\n", 78) = 78
479   write(2, " -k, --copy-dirlinks         transform symlink to a dir into referent dir\n", 74) = 74
479   write(2, " -K, --keep-dirlinks         treat symlinked dir on receiver as dir\n", 68) = 68
479   write(2, " -H, --hard-links            preserve hard links\n", 49) = 49
479   write(2, " -p, --perms                 preserve permissions\n", 50) = 50
479   write(2, " -E, --executability         preserve the file's executability\n", 63) = 63
479   write(2, "     --chmod=CHMOD           affect file and/or directory permissions\n", 70) = 70
479   write(2, " -A, --acls                  preserve ACLs (implies --perms)\n", 61) = 61
479   write(2, " -X, --xattrs                preserve extended attributes\n", 58) = 58
479   write(2, " -o, --owner                 preserve owner (super-user only)\n", 62) = 62
479   write(2, " -g, --group                 preserve group\n", 44) = 44
479   write(2, "     --devices               preserve device files (super-user only)\n", 69) = 69
479   write(2, "     --specials              preserve special files\n", 52) = 52
479   write(2, " -D                          same as --devices --specials\n", 58) = 58
479   write(2, " -t, --times                 preserve modification times\n", 57) = 57
479   write(2, " -O, --omit-dir-times        omit directories from --times\n", 59) = 59
479   write(2, " -J, --omit-link-times       omit symlinks from --times\n", 56) = 56
479   write(2, "     --super                 receiver attempts super-user activities\n", 69) = 69
479   write(2, "     --fake-super            store/recover privileged attrs using xattrs\n", 73) = 73
479   write(2, " -S, --sparse                turn sequences of nulls into sparse blocks\n", 72) = 72
479   write(2, "     --preallocate           pre-allocate dest files on remote receiver\n", 72) = 72
479   write(2, " -n, --dry-run               perform a trial run with no changes made\n", 70) = 70
479   write(2, " -W, --whole-file            copy files whole (without delta-xfer algorithm)\n", 77) = 77
479   write(2, "     --checksum-choice=STR   choose the checksum algorithms\n", 60) = 60
479   write(2, " -x, --one-file-system       don't cross filesystem boundaries\n", 63) = 63
479   write(2, " -B, --block-size=SIZE       force a fixed checksum block-size\n", 63) = 63
479   write(2, " -e, --rsh=COMMAND           specify the remote shell to use\n", 61) = 61
479   write(2, "     --rsync-path=PROGRAM    specify the rsync to run on the remote machine\n", 76) = 76
479   write(2, "     --existing              skip creating new files on receiver\n", 65) = 65
479   write(2, "     --ignore-existing       skip updating files that already exist on receiver\n", 80) = 80
479   write(2, "     --remove-source-files   sender removes synchronized files (non-dirs)\n", 74) = 74
479   write(2, "     --del                   an alias for --delete-during\n", 58) = 58
479   write(2, "     --delete                delete extraneous files from destination dirs\n", 75) = 75
479   write(2, "     --delete-before         receiver deletes before transfer, not during\n", 74) = 74
479   write(2, "     --delete-during         receiver deletes during the transfer\n", 66) = 66
479   write(2, "     --delete-delay          find deletions during, delete after\n", 65) = 65
479   write(2, "     --delete-after          receiver deletes after transfer, not during\n", 73) = 73
479   write(2, "     --delete-excluded       also delete excluded files from destination dirs\n", 78) = 78
479   write(2, "     --ignore-missing-args   ignore missing source args without error\n", 70) = 70
479   write(2, "     --delete-missing-args   delete missing source args from destination\n", 73) = 73
479   write(2, "     --ignore-errors         delete even if there are I/O errors\n", 65) = 65
479   write(2, "     --force                 force deletion of directories even if not empty\n", 77) = 77
479   write(2, "     --max-delete=NUM        don't delete more than NUM files\n", 62) = 62
479   write(2, "     --max-size=SIZE         don't transfer any file larger than SIZE\n", 70) = 70
479   write(2, "     --min-size=SIZE         don't transfer any file smaller than SIZE\n", 71) = 71
479   write(2, "     --partial               keep partially transferred files\n", 62) = 62
479   write(2, "     --partial-dir=DIR       put a partially transferred file into DIR\n", 71) = 71
479   write(2, "     --delay-updates         put all updated files into place at transfer's end\n", 80) = 80
479   write(2, " -m, --prune-empty-dirs      prune empty directory chains from the file-list\n", 77) = 77
479   write(2, "     --numeric-ids           don't map uid/gid values by user/group name\n", 73) = 73
479   write(2, "     --usermap=STRING        custom username mapping\n", 53) = 53
479   write(2, "     --groupmap=STRING       custom groupname mapping\n", 54) = 54
479   write(2, "     --chown=USER:GROUP      simple username/groupname mapping\n", 63) = 63
479   write(2, "     --timeout=SECONDS       set I/O timeout in seconds\n", 56) = 56
479   write(2, "     --contimeout=SECONDS    set daemon connection timeout in seconds\n", 70) = 70
479   write(2, " -I, --ignore-times          don't skip files that match in size and mod-time\n", 78) = 78
479   write(2, " -M, --remote-option=OPTION  send OPTION to the remote side only\n", 65) = 65
479   write(2, "     --size-only             skip files that match in size\n", 59) = 59
479   write(2, " -@, --modify-window=NUM     set the accuracy for mod-time comparisons\n", 71) = 71
479   write(2, " -T, --temp-dir=DIR          create temporary files in directory DIR\n", 69) = 69
479   write(2, " -y, --fuzzy                 find similar file for basis if no dest file\n", 73) = 73
479   write(2, "     --compare-dest=DIR      also compare destination files relative to DIR\n", 76) = 76
479   write(2, "     --copy-dest=DIR         ... and include copies of unchanged files\n", 71) = 71
479   write(2, "     --link-dest=DIR         hardlink to files in DIR when unchanged\n", 69) = 69
479   write(2, " -z, --compress              compress file data during the transfer\n", 68) = 68
479   write(2, "     --compress-level=NUM    explicitly set compression level\n", 62) = 62
479   write(2, "     --skip-compress=LIST    skip compressing files with a suffix in LIST\n", 74) = 74
479   write(2, " -C, --cvs-exclude           auto-ignore files the same way CVS does\n", 69) = 69
479   write(2, " -f, --filter=RULE           add a file-filtering RULE\n", 55) = 55
479   write(2, " -F                          same as --filter='dir-merge /.rsync-filter'\n", 73) = 73
479   write(2, "                             repeated: --filter='- .rsync-filter'\n", 66) = 66
479   write(2, "     --exclude=PATTERN       exclude files matching PATTERN\n", 60) = 60
479   write(2, "     --exclude-from=FILE     read exclude patterns from FILE\n", 61) = 61
479   write(2, "     --include=PATTERN       don't exclude files matching PATTERN\n", 66) = 66
479   write(2, "     --include-from=FILE     read include patterns from FILE\n", 61) = 61
479   write(2, "     --files-from=FILE       read list of source-file names from FILE\n", 70) = 70
479   write(2, " -0, --from0                 all *-from/filter files are delimited by 0s\n", 73) = 73
479   write(2, " -s, --protect-args          no space-splitting; only wildcard special-chars\n", 77) = 77
479   write(2, "     --address=ADDRESS       bind address for outgoing socket to daemon\n", 72) = 72
479   write(2, "     --port=PORT             specify double-colon alternate port number\n", 72) = 72
479   write(2, "     --sockopts=OPTIONS      specify custom TCP options\n", 56) = 56
479   write(2, "     --blocking-io           use blocking I/O for the remote shell\n", 67) = 67
479   write(2, "     --stats                 give some file-transfer stats\n", 59) = 59
479   write(2, " -8, --8-bit-output          leave high-bit chars unescaped in output\n", 70) = 70
479   write(2, " -h, --human-readable        output numbers in a human-readable format\n", 71) = 71
479   write(2, "     --progress              show progress during transfer\n", 59) = 59
479   write(2, " -P                          same as --partial --progress\n", 58) = 58
479   write(2, " -i, --itemize-changes       output a change-summary for all updates\n", 69) = 69
479   write(2, "     --out-format=FORMAT     output updates using the specified FORMAT\n", 71) = 71
479   write(2, "     --log-file=FILE         log what we're doing to the specified FILE\n", 72) = 72
479   write(2, "     --log-file-format=FMT   log updates using the specified FMT\n", 65) = 65
479   write(2, "     --password-file=FILE    read daemon-access password from FILE\n", 67) = 67
479   write(2, "     --list-only             list the files instead of copying them\n", 68) = 68
479   write(2, "     --bwlimit=RATE          limit socket I/O bandwidth\n", 56) = 56
479   write(2, "     --outbuf=N|L|B          set output buffering to None, Line, or Block\n", 74) = 74
479   write(2, "     --write-batch=FILE      write a batched update to FILE\n", 60) = 60
479   write(2, "     --only-write-batch=FILE like --write-batch but w/o updating destination\n", 77) = 77
479   write(2, "     --read-batch=FILE       read a batched update from FILE\n", 61) = 61
479   write(2, "     --protocol=NUM          force an older protocol version to be used\n", 72) = 72
479   write(2, "     --iconv=CONVERT_SPEC    request charset conversion of filenames\n", 69) = 69
479   write(2, "     --checksum-seed=NUM     set block/file checksum seed (advanced)\n", 69) = 69
479   write(2, " -4, --ipv4                  prefer IPv4\n", 41) = 41
479   write(2, " -6, --ipv6                  prefer IPv6\n", 41) = 41
479   write(2, "     --version               print version number\n", 50) = 50
479   write(2, "(-h) --help                  show this help (-h is --help only if used alone)\n", 78) = 78
479   write(2, "     --bpc-top-dir=DIR       absolute path to top BackupPC data directory\n", 74) = 74
479   write(2, "     --bpc-hardlink-max=NUM  hard link count maximum on TopDir file system\n", 75) = 75
479   write(2, "     --bpc-v3pool-used=NUM   flag for whether the V3 pool is in use\n", 68) = 68
479   write(2, "     --bpc-host-name=HOST    host name being backed up\n", 55) = 55
479   write(2, "     --bpc-share-name=HOST   share name being backed up\n", 56) = 56
479   write(2, "     --bpc-bkup-num=NUM      new backup number\n", 47) = 47
479   write(2, "     --bpc-bkup-comp=NUM     compression level for new backup\n", 62) = 62
479   write(2, "     --bpc-bkup-prevnum=NUM  previous backup number for reverse deltas\n", 71) = 71
479   write(2, "     --bpc-bkup-prevcomp=NUM compression level for previous backup\n", 67) = 67
479   write(2, "     --bpc-bkup-merge=N/C/V,...  list of backups to merge, with number/compress/version for each\n", 97) = 97
479   write(2, "     --bpc-bkup-inode0=NUM   starting inode number for new backup\n", 66) = 66
479   write(2, "     --bpc-attrib-new        use new-style attribute files\n", 59) = 59
479   write(2, "     --bpc-log-level=NUM     log level\n", 39) = 39
479   write(2, "\n", 1)                 = 1
479   write(2, "Use \"rsync --daemon --help\" to see the daemon-mode command-line options.\n", 73) = 73
479   write(2, "Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.\n", 77) = 77
479   write(2, "See http://rsync.samba.org/ for updates, bug reports, and answers\n", 66) = 66
479   rt_sigaction(SIGUSR1, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f37cb515520}, NULL, 8) = 0
479   rt_sigaction(SIGUSR2, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f37cb515520}, NULL, 8) = 0
479   write(2, "rsync error: syntax or usage error (code 1) at main.c(1567) [client=3.1.3.0]\n", 77) = 77
479   exit_group(1)                     = ?
479   +++ exited with 1 +++
