605   execve("/usr/bin/x86_64-linux-gnu-objdump", ["/usr/bin/x86_64-linux-gnu-objdump"], 0x7ffc1534a480 /* 12 vars */) = 0
605   brk(NULL)                         = 0x556428b04000
605   arch_prctl(0x3001 /* ARCH_??? */, 0x7ffeea88e690) = -1 EINVAL (Invalid argument)
605   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f1ec8a07000
605   access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
605   openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
605   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=6393, ...}, AT_EMPTY_PATH) = 0
605   mmap(NULL, 6393, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f1ec8a05000
605   close(3)                          = 0
605   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libopcodes-2.38-system.so", O_RDONLY|O_CLOEXEC) = 3
605   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\30\262\23\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0b\4\0\0\0\0\0\0b\4\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
605   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=1292632, ...}, AT_EMPTY_PATH) = 0
605   mmap(NULL, 1294528, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ec88c8000
605   mmap(0x7f1ec890f000, 45056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x47000) = 0x7f1ec890f000
605   mmap(0x7f1ec891a000, 36864, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x52000) = 0x7f1ec891a000
605   mmap(0x7f1ec8923000, 925696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5a000) = 0x7f1ec8923000
605   close(3)                          = 0
605   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libctf.so.0", O_RDONLY|O_CLOEXEC) = 3
605   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\240u\3\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(A\0\0\0\0\0\0(A\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
605   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=228576, ...}, AT_EMPTY_PATH) = 0
605   mmap(NULL, 231760, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ec888f000
605   mmap(0x7f1ec8894000, 163840, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5000) = 0x7f1ec8894000
605   mmap(0x7f1ec88bc000, 40960, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2d000) = 0x7f1ec88bc000
605   mmap(0x7f1ec88c6000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x36000) = 0x7f1ec88c6000
605   close(3)                          = 0
605   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libbfd-2.38-system.so", O_RDONLY|O_CLOEXEC) = 3
605   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\370d\27\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\360\377\3\0\0\0\0\0\360\377\3\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
605   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=1535032, ...}, AT_EMPTY_PATH) = 0
605   mmap(NULL, 1537608, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ec8717000
605   mprotect(0x7f1ec8757000, 1179648, PROT_NONE) = 0
605   mmap(0x7f1ec8757000, 942080, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x40000) = 0x7f1ec8757000
605   mmap(0x7f1ec883d000, 233472, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x126000) = 0x7f1ec883d000
605   mmap(0x7f1ec8877000, 98304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x15f000) = 0x7f1ec8877000
605   close(3)                          = 0
605   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
605   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0@\0\0\0\0\0\0\0\360\300!\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0B\0A\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0"..., 832) = 832
605   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
605   pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\2\200\0\300\4\0\0\0\1\0\0\0\0\0\0\0", 48, 848) = 48
605   pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\211\303\313\205\371\345PFwdq\376\320^\304AX\35\31i\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 896) = 68
605   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2216304, ...}, AT_EMPTY_PATH) = 0
605   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
605   mmap(NULL, 2260560, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ec84ef000
605   mmap(0x7f1ec8517000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7f1ec8517000
605   mmap(0x7f1ec86ac000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7f1ec86ac000
605   mmap(0x7f1ec8704000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x214000) = 0x7f1ec8704000
605   mmap(0x7f1ec870a000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f1ec870a000
605   close(3)                          = 0
605   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
605   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\10\242\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\37\0\0\0\0\0\08\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
605   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=108936, ...}, AT_EMPTY_PATH) = 0
605   mmap(NULL, 110776, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ec84d3000
605   mprotect(0x7f1ec84d5000, 98304, PROT_NONE) = 0
605   mmap(0x7f1ec84d5000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f1ec84d5000
605   mmap(0x7f1ec84e6000, 24576, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7f1ec84e6000
605   mmap(0x7f1ec84ed000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f1ec84ed000
605   close(3)                          = 0
605   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f1ec84d1000
605   mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f1ec84ce000
605   arch_prctl(ARCH_SET_FS, 0x7f1ec84ce740) = 0
605   set_tid_address(0x7f1ec84cea10)   = 605
605   set_robust_list(0x7f1ec84cea20, 24) = 0
605   rseq(0x7f1ec84cf0e0, 0x20, 0, 0x53053053) = 0
605   mprotect(0x7f1ec8704000, 16384, PROT_READ) = 0
605   mprotect(0x7f1ec84ed000, 4096, PROT_READ) = 0
605   mprotect(0x7f1ec8877000, 86016, PROT_READ) = 0
605   mprotect(0x7f1ec88c6000, 4096, PROT_READ) = 0
605   mprotect(0x7f1ec8923000, 921600, PROT_READ) = 0
605   mprotect(0x556428ad7000, 12288, PROT_READ) = 0
605   mprotect(0x7f1ec8a41000, 8192, PROT_READ) = 0
605   prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
605   munmap(0x7f1ec8a05000, 6393)      = 0
605   getrandom("\x3b\xe9\x10\xae\xb7\x9f\x6e\x49", 8, GRND_NONBLOCK) = 8
605   brk(NULL)                         = 0x556428b04000
605   brk(0x556428b25000)               = 0x556428b25000
605   write(2, "Usage: /usr/bin/x86_64-linux-gnu-objdump <option(s)> <file(s)>\n", 63) = 63
605   write(2, " Display information from object <file(s)>.\n", 44) = 44
605   write(2, " At least one of the following switches must be given:\n", 55) = 55
605   write(2, "  -a, --archive-headers    Display archive header information\n", 62) = 62
605   write(2, "  -f, --file-headers       Display the contents of the overall file header\n", 75) = 75
605   write(2, "  -p, --private-headers    Display object format specific file header contents\n", 79) = 79
605   write(2, "  -P, --private=OPT,OPT... Display object format specific contents\n", 67) = 67
605   write(2, "  -h, --[section-]headers  Display the contents of the section headers\n", 71) = 71
605   write(2, "  -x, --all-headers        Display the contents of all headers\n", 63) = 63
605   write(2, "  -d, --disassemble        Display assembler contents of executable sections\n", 77) = 77
605   write(2, "  -D, --disassemble-all    Display assembler contents of all sections\n", 70) = 70
605   write(2, "      --disassemble=<sym>  Display assembler contents from <sym>\n", 65) = 65
605   write(2, "  -S, --source             Intermix source code with disassembly\n", 65) = 65
605   write(2, "      --source-comment[=<txt>] Prefix lines of source code with <txt>\n", 70) = 70
605   write(2, "  -s, --full-contents      Display the full contents of all sections requested\n", 79) = 79
605   write(2, "  -g, --debugging          Display debug information in object file\n", 68) = 68
605   write(2, "  -e, --debugging-tags     Display debug information using ctags style\n", 71) = 71
605   write(2, "  -G, --stabs              Display (in raw form) any STABS info in the file\n", 76) = 76
605   write(2, "  -W, --dwarf[a/=abbrev, A/=addr, r/=aranges, c/=cu_index, L/=decodedline,\n              f/=frames, F/=frames-interp, g/=gdb_ind"..., 396) = 396
605   write(2, "  -Wk,--dwarf=links        Display the contents of sections that link to\n                            separate debuginfo files\n", 126) = 126
605   write(2, "  -WK,--dwarf=follow-links\n                           Follow links to separate debug info files (default)\n", 106) = 106
605   write(2, "  -WN,--dwarf=no-follow-links\n                           Do not follow links to separate debug info files\n", 106) = 106
605   write(2, "  -L, --process-links      Display the contents of non-debug sections in\n                            separate debuginfo files.  "..., 142) = 142
605   write(2, "      --ctf[=SECTION]      Display CTF info from SECTION, (default `.ctf')\n", 75) = 75
605   write(2, "  -t, --syms               Display the contents of the symbol table(s)\n", 71) = 71
605   write(2, "  -T, --dynamic-syms       Display the contents of the dynamic symbol table\n", 76) = 76
605   write(2, "  -r, --reloc              Display the relocation entries in the file\n", 70) = 70
605   write(2, "  -R, --dynamic-reloc      Display the dynamic relocation entries in the file\n", 78) = 78
605   write(2, "  @<file>                  Read options from <file>\n", 52) = 52
605   write(2, "  -v, --version            Display this program's version number\n", 65) = 65
605   write(2, "  -i, --info               List object formats and architectures supported\n", 75) = 75
605   write(2, "  -H, --help               Display this information\n", 52) = 52
605   exit_group(2)                     = ?
605   +++ exited with 2 +++
