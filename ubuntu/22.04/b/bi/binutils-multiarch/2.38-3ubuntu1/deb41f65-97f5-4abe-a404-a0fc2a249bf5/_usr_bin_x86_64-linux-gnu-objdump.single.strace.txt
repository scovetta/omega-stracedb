806   execve("/usr/bin/x86_64-linux-gnu-objdump.single", ["/usr/bin/x86_64-linux-gnu-objdump.single"], 0x7ffe559044e0 /* 12 vars */) = 0
806   brk(NULL)                         = 0x562bde2ef000
806   arch_prctl(0x3001 /* ARCH_??? */, 0x7ffc08532fb0) = -1 EINVAL (Invalid argument)
806   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f5dd4a43000
806   access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
806   openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
806   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=6681, ...}, AT_EMPTY_PATH) = 0
806   mmap(NULL, 6681, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f5dd4a41000
806   close(3)                          = 0
806   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libopcodes-2.38-system.so", O_RDONLY|O_CLOEXEC) = 3
806   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\30\262\23\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0b\4\0\0\0\0\0\0b\4\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
806   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=1292632, ...}, AT_EMPTY_PATH) = 0
806   mmap(NULL, 1294528, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f5dd4904000
806   mmap(0x7f5dd494b000, 45056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x47000) = 0x7f5dd494b000
806   mmap(0x7f5dd4956000, 36864, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x52000) = 0x7f5dd4956000
806   mmap(0x7f5dd495f000, 925696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5a000) = 0x7f5dd495f000
806   close(3)                          = 0
806   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libctf.so.0", O_RDONLY|O_CLOEXEC) = 3
806   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\240u\3\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(A\0\0\0\0\0\0(A\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
806   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=228576, ...}, AT_EMPTY_PATH) = 0
806   mmap(NULL, 231760, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f5dd48cb000
806   mmap(0x7f5dd48d0000, 163840, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x5000) = 0x7f5dd48d0000
806   mmap(0x7f5dd48f8000, 40960, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2d000) = 0x7f5dd48f8000
806   mmap(0x7f5dd4902000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x36000) = 0x7f5dd4902000
806   close(3)                          = 0
806   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libbfd-2.38-system.so", O_RDONLY|O_CLOEXEC) = 3
806   read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\370d\27\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\360\377\3\0\0\0\0\0\360\377\3\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
806   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=1535032, ...}, AT_EMPTY_PATH) = 0
806   mmap(NULL, 1537608, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f5dd4753000
806   mprotect(0x7f5dd4793000, 1179648, PROT_NONE) = 0
806   mmap(0x7f5dd4793000, 942080, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x40000) = 0x7f5dd4793000
806   mmap(0x7f5dd4879000, 233472, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x126000) = 0x7f5dd4879000
806   mmap(0x7f5dd48b3000, 98304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x15f000) = 0x7f5dd48b3000
806   close(3)                          = 0
806   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
806   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0@\0\0\0\0\0\0\0\360\300!\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0B\0A\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0"..., 832) = 832
806   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
806   pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\2\200\0\300\4\0\0\0\1\0\0\0\0\0\0\0", 48, 848) = 48
806   pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\211\303\313\205\371\345PFwdq\376\320^\304AX\35\31i\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 896) = 68
806   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2216304, ...}, AT_EMPTY_PATH) = 0
806   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
806   mmap(NULL, 2260560, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f5dd452b000
806   mmap(0x7f5dd4553000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7f5dd4553000
806   mmap(0x7f5dd46e8000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7f5dd46e8000
806   mmap(0x7f5dd4740000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x214000) = 0x7f5dd4740000
806   mmap(0x7f5dd4746000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f5dd4746000
806   close(3)                          = 0
806   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
806   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\10\242\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\37\0\0\0\0\0\08\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
806   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=108936, ...}, AT_EMPTY_PATH) = 0
806   mmap(NULL, 110776, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f5dd450f000
806   mprotect(0x7f5dd4511000, 98304, PROT_NONE) = 0
806   mmap(0x7f5dd4511000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f5dd4511000
806   mmap(0x7f5dd4522000, 24576, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7f5dd4522000
806   mmap(0x7f5dd4529000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f5dd4529000
806   close(3)                          = 0
806   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f5dd450d000
806   mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f5dd450a000
806   arch_prctl(ARCH_SET_FS, 0x7f5dd450a740) = 0
806   set_tid_address(0x7f5dd450aa10)   = 806
806   set_robust_list(0x7f5dd450aa20, 24) = 0
806   rseq(0x7f5dd450b0e0, 0x20, 0, 0x53053053) = 0
806   mprotect(0x7f5dd4740000, 16384, PROT_READ) = 0
806   mprotect(0x7f5dd4529000, 4096, PROT_READ) = 0
806   mprotect(0x7f5dd48b3000, 86016, PROT_READ) = 0
806   mprotect(0x7f5dd4902000, 4096, PROT_READ) = 0
806   mprotect(0x7f5dd495f000, 921600, PROT_READ) = 0
806   mprotect(0x562bdc401000, 12288, PROT_READ) = 0
806   mprotect(0x7f5dd4a7d000, 8192, PROT_READ) = 0
806   prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
806   munmap(0x7f5dd4a41000, 6681)      = 0
806   getrandom("\xe1\x44\x83\x8c\xf6\xf9\x03\x4a", 8, GRND_NONBLOCK) = 8
806   brk(NULL)                         = 0x562bde2ef000
806   brk(0x562bde310000)               = 0x562bde310000
806   write(2, "Usage: /usr/bin/x86_64-linux-gnu-objdump.single <option(s)> <file(s)>\n", 70) = 70
806   write(2, " Display information from object <file(s)>.\n", 44) = 44
806   write(2, " At least one of the following switches must be given:\n", 55) = 55
806   write(2, "  -a, --archive-headers    Display archive header information\n", 62) = 62
806   write(2, "  -f, --file-headers       Display the contents of the overall file header\n", 75) = 75
806   write(2, "  -p, --private-headers    Display object format specific file header contents\n", 79) = 79
806   write(2, "  -P, --private=OPT,OPT... Display object format specific contents\n", 67) = 67
806   write(2, "  -h, --[section-]headers  Display the contents of the section headers\n", 71) = 71
806   write(2, "  -x, --all-headers        Display the contents of all headers\n", 63) = 63
806   write(2, "  -d, --disassemble        Display assembler contents of executable sections\n", 77) = 77
806   write(2, "  -D, --disassemble-all    Display assembler contents of all sections\n", 70) = 70
806   write(2, "      --disassemble=<sym>  Display assembler contents from <sym>\n", 65) = 65
806   write(2, "  -S, --source             Intermix source code with disassembly\n", 65) = 65
806   write(2, "      --source-comment[=<txt>] Prefix lines of source code with <txt>\n", 70) = 70
806   write(2, "  -s, --full-contents      Display the full contents of all sections requested\n", 79) = 79
806   write(2, "  -g, --debugging          Display debug information in object file\n", 68) = 68
806   write(2, "  -e, --debugging-tags     Display debug information using ctags style\n", 71) = 71
806   write(2, "  -G, --stabs              Display (in raw form) any STABS info in the file\n", 76) = 76
806   write(2, "  -W, --dwarf[a/=abbrev, A/=addr, r/=aranges, c/=cu_index, L/=decodedline,\n              f/=frames, F/=frames-interp, g/=gdb_ind"..., 396) = 396
806   write(2, "  -Wk,--dwarf=links        Display the contents of sections that link to\n                            separate debuginfo files\n", 126) = 126
806   write(2, "  -WK,--dwarf=follow-links\n                           Follow links to separate debug info files (default)\n", 106) = 106
806   write(2, "  -WN,--dwarf=no-follow-links\n                           Do not follow links to separate debug info files\n", 106) = 106
806   write(2, "  -L, --process-links      Display the contents of non-debug sections in\n                            separate debuginfo files.  "..., 142) = 142
806   write(2, "      --ctf[=SECTION]      Display CTF info from SECTION, (default `.ctf')\n", 75) = 75
806   write(2, "  -t, --syms               Display the contents of the symbol table(s)\n", 71) = 71
806   write(2, "  -T, --dynamic-syms       Display the contents of the dynamic symbol table\n", 76) = 76
806   write(2, "  -r, --reloc              Display the relocation entries in the file\n", 70) = 70
806   write(2, "  -R, --dynamic-reloc      Display the dynamic relocation entries in the file\n", 78) = 78
806   write(2, "  @<file>                  Read options from <file>\n", 52) = 52
806   write(2, "  -v, --version            Display this program's version number\n", 65) = 65
806   write(2, "  -i, --info               List object formats and architectures supported\n", 75) = 75
806   write(2, "  -H, --help               Display this information\n", 52) = 52
806   exit_group(2)                     = ?
806   +++ exited with 2 +++
