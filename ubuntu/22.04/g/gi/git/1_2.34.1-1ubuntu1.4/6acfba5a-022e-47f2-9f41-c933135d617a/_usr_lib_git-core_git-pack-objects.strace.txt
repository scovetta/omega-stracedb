1605  execve("/usr/lib/git-core/git-pack-objects", ["/usr/lib/git-core/git-pack-objects"], 0x7ffd5c2e7e60 /* 12 vars */) = 0
1605  brk(NULL)                         = 0x557499c2c000
1605  arch_prctl(0x3001 /* ARCH_??? */, 0x7ffd23e7af30) = -1 EINVAL (Invalid argument)
1605  mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fd25ca3f000
1605  access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
1605  openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=7529, ...}, AT_EMPTY_PATH) = 0
1605  mmap(NULL, 7529, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fd25ca3d000
1605  close(3)                          = 0
1605  openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libpcre2-8.so.0", O_RDONLY|O_CLOEXEC) = 3
1605  read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\210S\t\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0000\36\0\0\0\0\0\0000\36\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=613064, ...}, AT_EMPTY_PATH) = 0
1605  mmap(NULL, 615184, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fd25c9a6000
1605  mmap(0x7fd25c9a8000, 438272, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7fd25c9a8000
1605  mmap(0x7fd25ca13000, 163840, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6d000) = 0x7fd25ca13000
1605  mmap(0x7fd25ca3b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x94000) = 0x7fd25ca3b000
1605  close(3)                          = 0
1605  openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
1605  read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\10\242\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\37\0\0\0\0\0\08\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=108936, ...}, AT_EMPTY_PATH) = 0
1605  mmap(NULL, 110776, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fd25c98a000
1605  mprotect(0x7fd25c98c000, 98304, PROT_NONE) = 0
1605  mmap(0x7fd25c98c000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7fd25c98c000
1605  mmap(0x7fd25c99d000, 24576, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7fd25c99d000
1605  mmap(0x7fd25c9a4000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7fd25c9a4000
1605  close(3)                          = 0
1605  openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
1605  read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0@\0\0\0\0\0\0\0\360\300!\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0B\0A\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0"..., 832) = 832
1605  pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
1605  pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\2\200\0\300\4\0\0\0\1\0\0\0\0\0\0\0", 48, 848) = 48
1605  pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\211\303\313\205\371\345PFwdq\376\320^\304AX\35\31i\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 896) = 68
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2216304, ...}, AT_EMPTY_PATH) = 0
1605  pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
1605  mmap(NULL, 2260560, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fd25c762000
1605  mmap(0x7fd25c78a000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7fd25c78a000
1605  mmap(0x7fd25c91f000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7fd25c91f000
1605  mmap(0x7fd25c977000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x214000) = 0x7fd25c977000
1605  mmap(0x7fd25c97d000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fd25c97d000
1605  close(3)                          = 0
1605  mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fd25c760000
1605  arch_prctl(ARCH_SET_FS, 0x7fd25c760b80) = 0
1605  set_tid_address(0x7fd25c760e50)   = 1605
1605  set_robust_list(0x7fd25c760e60, 24) = 0
1605  rseq(0x7fd25c761520, 0x20, 0, 0x53053053) = 0
1605  mprotect(0x7fd25c977000, 16384, PROT_READ) = 0
1605  mprotect(0x7fd25c9a4000, 4096, PROT_READ) = 0
1605  mprotect(0x7fd25ca3b000, 4096, PROT_READ) = 0
1605  mprotect(0x55749892c000, 16384, PROT_READ) = 0
1605  mprotect(0x7fd25ca79000, 8192, PROT_READ) = 0
1605  prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
1605  munmap(0x7fd25ca3d000, 7529)      = 0
1605  openat(AT_FDCWD, "/dev/null", O_RDWR) = 3
1605  close(3)                          = 0
1605  rt_sigprocmask(SIG_UNBLOCK, [PIPE], NULL, 8) = 0
1605  rt_sigaction(SIGPIPE, {sa_handler=SIG_DFL, sa_mask=[PIPE], sa_flags=SA_RESTORER|SA_RESTART, sa_restorer=0x7fd25c7a4520}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
1605  getrandom("\xdf\xdb\xb1\x66\x9f\xfb\xc6\x0f", 8, GRND_NONBLOCK) = 8
1605  brk(NULL)                         = 0x557499c2c000
1605  brk(0x557499c4d000)               = 0x557499c4d000
1605  newfstatat(AT_FDCWD, "/usr/share/locale", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
1605  access("/etc/gitconfig", R_OK)    = -1 ENOENT (No such file or directory)
1605  access("/root/.config/git/config", R_OK) = -1 ENOENT (No such file or directory)
1605  access("/root/.gitconfig", R_OK)  = -1 ENOENT (No such file or directory)
1605  getcwd("/tmp", 129)               = 5
1605  newfstatat(AT_FDCWD, "/tmp", {st_mode=S_IFDIR|S_ISVTX|0777, st_size=4096, ...}, 0) = 0
1605  newfstatat(AT_FDCWD, "/tmp/.git", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
1605  newfstatat(AT_FDCWD, "/tmp/.git/HEAD", {st_mode=S_IFREG|0644, st_size=23, ...}, AT_SYMLINK_NOFOLLOW) = 0
1605  openat(AT_FDCWD, "/tmp/.git/HEAD", O_RDONLY) = 3
1605  read(3, "ref: refs/heads/master\n", 255) = 23
1605  read(3, "", 232)                  = 0
1605  close(3)                          = 0
1605  newfstatat(AT_FDCWD, "/tmp/.git/commondir", 0x7ffd23e7a7c0, AT_SYMLINK_NOFOLLOW) = -1 ENOENT (No such file or directory)
1605  access("/tmp/.git/objects", X_OK) = 0
1605  access("/tmp/.git/refs", X_OK)    = 0
1605  newfstatat(AT_FDCWD, "/tmp", {st_mode=S_IFDIR|S_ISVTX|0777, st_size=4096, ...}, AT_SYMLINK_NOFOLLOW) = 0
1605  geteuid()                         = 0
1605  newfstatat(AT_FDCWD, "/tmp/.git", {st_mode=S_IFDIR|0755, st_size=4096, ...}, AT_SYMLINK_NOFOLLOW) = 0
1605  geteuid()                         = 0
1605  newfstatat(AT_FDCWD, ".git/commondir", 0x7ffd23e7a8b0, AT_SYMLINK_NOFOLLOW) = -1 ENOENT (No such file or directory)
1605  openat(AT_FDCWD, ".git/config", O_RDONLY) = 3
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=92, ...}, AT_EMPTY_PATH) = 0
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=92, ...}, AT_EMPTY_PATH) = 0
1605  read(3, "[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n", 4096) = 92
1605  read(3, "", 4096)                 = 0
1605  close(3)                          = 0
1605  getcwd("/tmp", 129)               = 5
1605  newfstatat(AT_FDCWD, ".git", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
1605  newfstatat(AT_FDCWD, ".git/commondir", 0x7ffd23e7a870, AT_SYMLINK_NOFOLLOW) = -1 ENOENT (No such file or directory)
1605  access("/etc/gitconfig", R_OK)    = -1 ENOENT (No such file or directory)
1605  access("/root/.config/git/config", R_OK) = -1 ENOENT (No such file or directory)
1605  access("/root/.gitconfig", R_OK)  = -1 ENOENT (No such file or directory)
1605  access(".git/config", R_OK)       = 0
1605  openat(AT_FDCWD, ".git/config", O_RDONLY) = 3
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=92, ...}, AT_EMPTY_PATH) = 0
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=92, ...}, AT_EMPTY_PATH) = 0
1605  read(3, "[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n", 4096) = 92
1605  read(3, "", 4096)                 = 0
1605  close(3)                          = 0
1605  access("/etc/gitconfig", R_OK)    = -1 ENOENT (No such file or directory)
1605  access("/root/.config/git/config", R_OK) = -1 ENOENT (No such file or directory)
1605  access("/root/.gitconfig", R_OK)  = -1 ENOENT (No such file or directory)
1605  access(".git/config", R_OK)       = 0
1605  openat(AT_FDCWD, ".git/config", O_RDONLY) = 3
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=92, ...}, AT_EMPTY_PATH) = 0
1605  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=92, ...}, AT_EMPTY_PATH) = 0
1605  read(3, "[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n", 4096) = 92
1605  read(3, "", 4096)                 = 0
1605  close(3)                          = 0
1605  ioctl(2, TCGETS, 0x7ffd23e78af0)  = -1 ENOTTY (Inappropriate ioctl for device)
1605  write(2, "usage: git pack-objects --stdout [<options>...] [< <ref-list> | < <object-list>]", 80) = 80
1605  write(2, "\n", 1)                 = 1
1605  write(2, "   or: git pack-objects [<options>...] <base-name> [< <ref-list> | < <object-list>]", 83) = 83
1605  write(2, "\n", 1)                 = 1
1605  write(2, "\n", 1)                 = 1
1605  write(2, "    ", 4)               = 4
1605  write(2, "-q", 2)                 = 2
1605  write(2, ", ", 2)                 = 2
1605  write(2, "--quiet", 7)            = 7
1605  write(2, "           do not show progress meter\n", 38) = 38
1605  write(2, "    ", 4)               = 4
1605  write(2, "--progress", 10)        = 10
1605  write(2, "            show progress meter\n", 32) = 32
1605  write(2, "    ", 4)               = 4
1605  write(2, "--all-progress", 14)    = 14
1605  write(2, "        show progress meter during object writing phase\n", 56) = 56
1605  write(2, "    ", 4)               = 4
1605  write(2, "--all-progress-implied", 22) = 22
1605  write(2, "\n", 1)                 = 1
1605  write(2, "                          similar to --all-progress when progress meter is shown\n", 81) = 81
1605  write(2, "    ", 4)               = 4
1605  write(2, "--index-version", 15)   = 15
1605  write(2, " <version>[,<offset>]", 21) = 21
1605  write(2, "\n", 1)                 = 1
1605  write(2, "                          write the pack index file in the specified idx format version\n", 88) = 88
1605  write(2, "    ", 4)               = 4
1605  write(2, "--max-pack-size", 15)   = 15
1605  write(2, " <n>", 4)               = 4
1605  write(2, "   maximum size of each output pack file\n", 41) = 41
1605  write(2, "    ", 4)               = 4
1605  write(2, "--local", 7)            = 7
1605  write(2, "               ignore borrowed objects from alternate object store\n", 67) = 67
1605  write(2, "    ", 4)               = 4
1605  write(2, "--incremental", 13)     = 13
1605  write(2, "         ignore packed objects\n", 31) = 31
1605  write(2, "    ", 4)               = 4
1605  write(2, "--window", 8)           = 8
1605  write(2, " <n>", 4)               = 4
1605  write(2, "          limit pack window by objects\n", 39) = 39
1605  write(2, "    ", 4)               = 4
1605  write(2, "--window-memory", 15)   = 15
1605  write(2, " <n>", 4)               = 4
1605  write(2, "   limit pack window by memory in addition to object limit\n", 59) = 59
1605  write(2, "    ", 4)               = 4
1605  write(2, "--depth", 7)            = 7
1605  write(2, " <n>", 4)               = 4
1605  write(2, "           maximum length of delta chain allowed in the resulting pack\n", 71) = 71
1605  write(2, "    ", 4)               = 4
1605  write(2, "--reuse-delta", 13)     = 13
1605  write(2, "         reuse existing deltas\n", 31) = 31
1605  write(2, "    ", 4)               = 4
1605  write(2, "--reuse-object", 14)    = 14
1605  write(2, "        reuse existing objects\n", 31) = 31
1605  write(2, "    ", 4)               = 4
1605  write(2, "--delta-base-offset", 19) = 19
1605  write(2, "   use OFS_DELTA objects\n", 25) = 25
1605  write(2, "    ", 4)               = 4
1605  write(2, "--threads", 9)          = 9
1605  write(2, " <n>", 4)               = 4
1605  write(2, "         use threads when searching for best delta matches\n", 59) = 59
1605  write(2, "    ", 4)               = 4
1605  write(2, "--non-empty", 11)       = 11
1605  write(2, "           do not create an empty pack output\n", 46) = 46
1605  write(2, "    ", 4)               = 4
1605  write(2, "--revs", 6)             = 6
1605  write(2, "                read revision arguments from standard input\n", 60) = 60
1605  write(2, "    ", 4)               = 4
1605  write(2, "--unpacked", 10)        = 10
1605  write(2, "            limit the objects to those that are not yet packed\n", 63) = 63
1605  write(2, "    ", 4)               = 4
1605  write(2, "--all", 5)              = 5
1605  write(2, "                 include objects reachable from any reference\n", 62) = 62
1605  write(2, "    ", 4)               = 4
1605  write(2, "--reflog", 8)           = 8
1605  write(2, "              include objects referred by reflog entries\n", 57) = 57
1605  write(2, "    ", 4)               = 4
1605  write(2, "--indexed-objects", 17) = 17
1605  write(2, "     include objects referred to by the index\n", 46) = 46
1605  write(2, "    ", 4)               = 4
1605  write(2, "--stdin-packs", 13)     = 13
1605  write(2, "         read packs from stdin\n", 31) = 31
1605  write(2, "    ", 4)               = 4
1605  write(2, "--stdout", 8)           = 8
1605  write(2, "              output pack to stdout\n", 36) = 36
1605  write(2, "    ", 4)               = 4
1605  write(2, "--include-tag", 13)     = 13
1605  write(2, "         include tag objects that refer to objects to be packed\n", 64) = 64
1605  write(2, "    ", 4)               = 4
1605  write(2, "--keep-unreachable", 18) = 18
1605  write(2, "    keep unreachable objects\n", 29) = 29
1605  write(2, "    ", 4)               = 4
1605  write(2, "--pack-loose-unreachable", 24) = 24
1605  write(2, "\n", 1)                 = 1
1605  write(2, "                          pack loose unreachable objects\n", 57) = 57
1605  write(2, "    ", 4)               = 4
1605  write(2, "--unpack-unreachable", 20) = 20
1605  write(2, "[=<time>]", 9)          = 9
1605  write(2, "\n", 1)                 = 1
1605  write(2, "                          unpack unreachable objects newer than <time>\n", 71) = 71
1605  write(2, "    ", 4)               = 4
1605  write(2, "--sparse", 8)           = 8
1605  write(2, "              use the sparse reachability algorithm\n", 52) = 52
1605  write(2, "    ", 4)               = 4
1605  write(2, "--thin", 6)             = 6
1605  write(2, "                create thin packs\n", 34) = 34
1605  write(2, "    ", 4)               = 4
1605  write(2, "--shallow", 9)          = 9
1605  write(2, "             create packs suitable for shallow fetches\n", 55) = 55
1605  write(2, "    ", 4)               = 4
1605  write(2, "--honor-pack-keep", 17) = 17
1605  write(2, "     ignore packs that have companion .keep file\n", 49) = 49
1605  write(2, "    ", 4)               = 4
1605  write(2, "--keep-pack", 11)       = 11
1605  write(2, " <name>", 7)            = 7
1605  write(2, "    ignore this pack\n", 21) = 21
1605  write(2, "    ", 4)               = 4
1605  write(2, "--compression", 13)     = 13
1605  write(2, " <n>", 4)               = 4
1605  write(2, "     pack compression level\n", 28) = 28
1605  write(2, "    ", 4)               = 4
1605  write(2, "--keep-true-parents", 19) = 19
1605  write(2, "   do not hide commits by grafts\n", 33) = 33
1605  write(2, "    ", 4)               = 4
1605  write(2, "--use-bitmap-index", 18) = 18
1605  write(2, "    use a bitmap index if available to speed up counting objects\n", 65) = 65
1605  write(2, "    ", 4)               = 4
1605  write(2, "--write-bitmap-index", 20) = 20
1605  write(2, "  write a bitmap index together with the pack index\n", 52) = 52
1605  write(2, "    ", 4)               = 4
1605  write(2, "--filter", 8)           = 8
1605  write(2, " <args>", 7)            = 7
1605  write(2, "       object filtering\n", 24) = 24
1605  write(2, "    ", 4)               = 4
1605  write(2, "--missing", 9)          = 9
1605  write(2, " <action>", 9)          = 9
1605  write(2, "    handling for missing objects\n", 33) = 33
1605  write(2, "    ", 4)               = 4
1605  write(2, "--exclude-promisor-objects", 26) = 26
1605  write(2, "\n", 1)                 = 1
1605  write(2, "                          do not pack objects in promisor packfiles\n", 68) = 68
1605  write(2, "    ", 4)               = 4
1605  write(2, "--delta-islands", 15)   = 15
1605  write(2, "       respect islands during delta compression\n", 48) = 48
1605  write(2, "    ", 4)               = 4
1605  write(2, "--uri-protocol", 14)    = 14
1605  write(2, " <protocol>", 11)       = 11
1605  write(2, "\n", 1)                 = 1
1605  write(2, "                          exclude any configured uploadpack.blobpackfileuri with this protocol\n", 95) = 95
1605  write(2, "\n", 1)                 = 1
1605  exit_group(129)                   = ?
1605  +++ exited with 129 +++
