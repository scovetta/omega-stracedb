
 using: uno-skeletonmaker
            dump [<options>] -t <type> ...
        uno-skeletonmaker
            component [<options>] -n <name> -t <type> ...
        uno-skeletonmaker
            calc-add-in [<options>] -n <name> -t <add-in_service>
        uno-skeletonmaker
            add-on [<options>] -n <name> -p <protocol_name:command,...>
        uno-skeletonmaker -V, --version
        uno-skeletonmaker -h, --help

 sub-commands:
    dump        dump declarations on stdout (e.g. constructors, methods, type
                mapping for properties) or complete method bodies with
                method forwarding.
    component   generates language specific code skeleton files using the
                implementation name as the file and class name
    calc-add-in generates a language specific code skeleton for a calc add-in
                using the implementation name as the file and class name. A 
                service type is necessary, referencing an interface which defines
                the new add-in functions.
    add-on      generates a language specific code skeleton for an add-on component
                using the implementation name as the file and class name. The protocol
                name(s) and the corresponding command(s) have to be specified with the
                '-p' option.

 options:
    -a, --all              list all interface methods, not only the direct
                           ones
    --(java5|cpp)          select the target language
                           --java5 generate output for Java 1.5 or later (is 
                                   currently the default)
                           --cpp   generate output for C++
    -sn, --shortnames      using namespace abbreviation 'css:': for
                           '::com::sun::star::', only valid for sub-command
                           'dump' and target language 'cpp'. It is default for the
                           sub-command 'component'.
    --propertysetmixin     the generated skeleton implements the cppu::PropertySetMixin
                           helper if a referenced new style service specifies an
                           interface which provides attributes (directly or inherited).
    -lh --licenseheader    generates a default LibreOffice MPL license
                           header at the beginning of a component source file.
                           This option is taken into account in 'component' mode
                           only and if -o is unequal 'stdout'.
    -bc                    specifies that the generated calc add-in is backward
    --backward-compatible  compatible to older office versions and implement the
                           former required add-in interfaces where the implementation
                           is mapped on the new add-in configuration. In this case
                           the config schema needs to be bundled with the extension
                           add-in as well. Default is a minimal add-in component
                           skeleton based on the configuration coming with the
                           office since OO.org 2.0.4.
    -o <path>              path specifies an existing directory where the
                           output files are generated to, only valid for
                           sub-command 'component'. If path=stdout the generated
                           code is generated on standard out instead of a file.
    -l <file>              specifies a binary type library (can be used more
                           than once).
    -n <name>              specifies an implementation name for the component
                           (used as classname, filename and package|namespace
                           name). In 'dump' mode it is used as classname (e.g.
                           "MyBase::", C++ only) to generate method bodies not
                           inline.
    -d <name>              specifies a base classname or a delegator.
                           In 'dump' mode it is used as a delegator to forward
                           methods. It can be used as '<name>::' for base
                           forwarding, or '<name>->|.' for composition.
                           Using "_" means that a default bodies with default
                           return values are dumped.
    -t <name>              specifies a UNOIDL type name, e.g.
                           com.sun.star.text.XText (can be used more than once)
    -p <protocol:cmd(s)>   specifies an add-on protocol name and the corresponding
                           command names, where the commands are a ',' separated list
                           of unique commands. This option is only valid for add-ons.
    -V, --version          print version number and exit
    -h, --help             print this help and exit

uno-skeletonmaker Version 0.4

