716   execve("/usr/lib/erlang/erts-12.2.1/bin/erl_call", ["/usr/lib/erlang/erts-12.2.1/bin/erl_call"], 0x7ffcfdfa8aa0 /* 12 vars */) = 0
716   brk(NULL)                         = 0x55f435b53000
716   arch_prctl(0x3001 /* ARCH_??? */, 0x7ffdca8e3ab0) = -1 EINVAL (Invalid argument)
716   mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fd45f8e5000
716   access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
716   openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
716   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=6193, ...}, AT_EMPTY_PATH) = 0
716   mmap(NULL, 6193, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fd45f8e3000
716   close(3)                          = 0
716   openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
716   read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0@\0\0\0\0\0\0\0\360\300!\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0B\0A\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0"..., 832) = 832
716   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
716   pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\2\200\0\300\4\0\0\0\1\0\0\0\0\0\0\0", 48, 848) = 48
716   pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\211\303\313\205\371\345PFwdq\376\320^\304AX\35\31i\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 896) = 68
716   newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2216304, ...}, AT_EMPTY_PATH) = 0
716   pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
716   mmap(NULL, 2260560, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fd45f6bb000
716   mmap(0x7fd45f6e3000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7fd45f6e3000
716   mmap(0x7fd45f878000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7fd45f878000
716   mmap(0x7fd45f8d0000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x214000) = 0x7fd45f8d0000
716   mmap(0x7fd45f8d6000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fd45f8d6000
716   close(3)                          = 0
716   mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fd45f6b8000
716   arch_prctl(ARCH_SET_FS, 0x7fd45f6b8740) = 0
716   set_tid_address(0x7fd45f6b8a10)   = 716
716   set_robust_list(0x7fd45f6b8a20, 24) = 0
716   rseq(0x7fd45f6b90e0, 0x20, 0, 0x53053053) = 0
716   mprotect(0x7fd45f8d0000, 16384, PROT_READ) = 0
716   mprotect(0x55f43444e000, 4096, PROT_READ) = 0
716   mprotect(0x7fd45f91f000, 8192, PROT_READ) = 0
716   prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
716   munmap(0x7fd45f8e3000, 6193)      = 0
716   prlimit64(0, RLIMIT_NOFILE, NULL, {rlim_cur=1024*1024, rlim_max=1024*1024}) = 0
716   getrandom("\xe4\x95\x72\x78\x34\xc0\x69\x0c", 8, GRND_NONBLOCK) = 8
716   brk(NULL)                         = 0x55f435b53000
716   brk(0x55f435b74000)               = 0x55f435b74000
716   mmap(NULL, 266240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fd45f677000
716   write(2, "\nUsage: /usr/lib/erlang/erts-12.2.1/bin/erl_call [-[demqrsv]] [-c Cookie] [-h HiddenName] \n", 91) = 91
716   write(2, "            [-x ErlScript] [-a [Mod [Fun [Args]]]] [-timeout Secs]\n", 67) = 67
716   write(2, "            (-n Node | -sname Node | -name Node | -address [HOSTNAME:]PORT)\n\n", 77) = 77
716   write(2, "  where: -a  apply(Mod,Fun,Args) (e.g -a 'erlang length [[a,b,c]]'\n", 67) = 67
716   write(2, "         -c  cookie string; by default read from ~/.erlang.cookie\n", 66) = 66
716   write(2, "         -d  direct Erlang output to ~/.erl_call.out.<Nodename>\n", 64) = 64
716   write(2, "         -e  evaluate contents of standard input (e.g., echo \"X=1,Y=2,{X,Y}.\"|/usr/lib/erlang/erts-12.2.1/bin/erl_call -e ...)\n", 127) = 127
716   write(2, "         -fetch_stdout\n           execute the code, specified with the -a or -e option, in a new\n           process that has a g"..., 385) = 385
716   write(2, "         -h  specify a name for the erl_call client node\n", 57) = 57
716   write(2, "         -m  read and compile Erlang module from stdin\n", 55) = 55
716   write(2, "         -n  name of Erlang node, same as -name\n", 48) = 48
716   write(2, "         -name  name of Erlang node, expanded to a fully qualified\n", 67) = 67
716   write(2, "         -sname name of Erlang node, short form will be used\n", 61) = 61
716   write(2, "         -address [HOSTNAME:]PORT of Erlang node\n                  (the default hostname is the hostname of the local manchine)\n"..., 293) = 293
716   write(2, "         -no_result_term  do not print the result term\n", 55) = 55
716   write(2, "         -timeout  command timeout, in seconds\n", 47) = 47
716   write(2, "         -q  halt the Erlang node (overrides the -s switch)\n", 60) = 60
716   write(2, "         -r  use a random name for the erl_call client node\n", 60) = 60
716   write(2, "         -s  start a new Erlang node if necessary\n", 50) = 50
716   write(2, "         -v  verbose mode, i.e print some information on stderr\n", 64) = 64
716   write(2, "         -x  use specified erl start script, default is erl\n", 60) = 60
716   exit_group(0)                     = ?
716   +++ exited with 0 +++
