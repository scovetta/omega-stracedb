1083  execve("/usr/lib/git-core/git-clone", ["/usr/lib/git-core/git-clone"], 0x7ffd01e10450 /* 12 vars */) = 0
1083  brk(NULL)                         = 0x555b6ad5d000
1083  arch_prctl(0x3001 /* ARCH_??? */, 0x7ffdcc5769b0) = -1 EINVAL (Invalid argument)
1083  mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0570b38000
1083  access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
1083  openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
1083  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=7529, ...}, AT_EMPTY_PATH) = 0
1083  mmap(NULL, 7529, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f0570b36000
1083  close(3)                          = 0
1083  openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libpcre2-8.so.0", O_RDONLY|O_CLOEXEC) = 3
1083  read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\210S\t\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0000\36\0\0\0\0\0\0000\36\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
1083  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=613064, ...}, AT_EMPTY_PATH) = 0
1083  mmap(NULL, 615184, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f0570a9f000
1083  mmap(0x7f0570aa1000, 438272, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f0570aa1000
1083  mmap(0x7f0570b0c000, 163840, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6d000) = 0x7f0570b0c000
1083  mmap(0x7f0570b34000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x94000) = 0x7f0570b34000
1083  close(3)                          = 0
1083  openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
1083  read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\10\242\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\36\0\35\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\37\0\0\0\0\0\08\37\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0"..., 832) = 832
1083  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=108936, ...}, AT_EMPTY_PATH) = 0
1083  mmap(NULL, 110776, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f0570a83000
1083  mprotect(0x7f0570a85000, 98304, PROT_NONE) = 0
1083  mmap(0x7f0570a85000, 69632, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f0570a85000
1083  mmap(0x7f0570a96000, 24576, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0x7f0570a96000
1083  mmap(0x7f0570a9d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f0570a9d000
1083  close(3)                          = 0
1083  openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
1083  read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0@\0\0\0\0\0\0\0\360\300!\0\0\0\0\0\0\0\0\0@\08\0\16\0@\0B\0A\0\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0"..., 832) = 832
1083  pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
1083  pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\2\200\0\300\4\0\0\0\1\0\0\0\0\0\0\0", 48, 848) = 48
1083  pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\211\303\313\205\371\345PFwdq\376\320^\304AX\35\31i\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0", 68, 896) = 68
1083  newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2216304, ...}, AT_EMPTY_PATH) = 0
1083  pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\20\3\0\0\0\0\0\0\20\3\0\0\0\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\4\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0000>\36\0\0\0\0\0\34\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0"..., 784, 64) = 784
1083  mmap(NULL, 2260560, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f057085b000
1083  mmap(0x7f0570883000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7f0570883000
1083  mmap(0x7f0570a18000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7f0570a18000
1083  mmap(0x7f0570a70000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x214000) = 0x7f0570a70000
1083  mmap(0x7f0570a76000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f0570a76000
1083  close(3)                          = 0
1083  mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0570859000
1083  arch_prctl(ARCH_SET_FS, 0x7f0570859b80) = 0
1083  set_tid_address(0x7f0570859e50)   = 1083
1083  set_robust_list(0x7f0570859e60, 24) = 0
1083  rseq(0x7f057085a520, 0x20, 0, 0x53053053) = 0
1083  mprotect(0x7f0570a70000, 16384, PROT_READ) = 0
1083  mprotect(0x7f0570a9d000, 4096, PROT_READ) = 0
1083  mprotect(0x7f0570b34000, 4096, PROT_READ) = 0
1083  mprotect(0x555b69138000, 16384, PROT_READ) = 0
1083  mprotect(0x7f0570b72000, 8192, PROT_READ) = 0
1083  prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
1083  munmap(0x7f0570b36000, 7529)      = 0
1083  openat(AT_FDCWD, "/dev/null", O_RDWR) = 3
1083  close(3)                          = 0
1083  rt_sigprocmask(SIG_UNBLOCK, [PIPE], NULL, 8) = 0
1083  rt_sigaction(SIGPIPE, {sa_handler=SIG_DFL, sa_mask=[PIPE], sa_flags=SA_RESTORER|SA_RESTART, sa_restorer=0x7f057089d520}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
1083  getrandom("\x00\x6f\x5c\x90\x3b\xb9\x01\xfc", 8, GRND_NONBLOCK) = 8
1083  brk(NULL)                         = 0x555b6ad5d000
1083  brk(0x555b6ad7e000)               = 0x555b6ad7e000
1083  newfstatat(AT_FDCWD, "/usr/share/locale", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
1083  access("/etc/gitconfig", R_OK)    = -1 ENOENT (No such file or directory)
1083  access("/root/.config/git/config", R_OK) = -1 ENOENT (No such file or directory)
1083  access("/root/.gitconfig", R_OK)  = -1 ENOENT (No such file or directory)
1083  access("/etc/gitconfig", R_OK)    = -1 ENOENT (No such file or directory)
1083  access("/root/.config/git/config", R_OK) = -1 ENOENT (No such file or directory)
1083  access("/root/.gitconfig", R_OK)  = -1 ENOENT (No such file or directory)
1083  write(2, "fatal: You must specify a repository to clone.\n\n", 48) = 48
1083  write(2, "usage: git clone [<options>] [--] <repo> [<dir>]", 48) = 48
1083  write(2, "\n", 1)                 = 1
1083  write(2, "\n", 1)                 = 1
1083  write(2, "    ", 4)               = 4
1083  write(2, "-v", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--verbose", 9)          = 9
1083  write(2, "         be more verbose\n", 25) = 25
1083  write(2, "    ", 4)               = 4
1083  write(2, "-q", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--quiet", 7)            = 7
1083  write(2, "           be more quiet\n", 25) = 25
1083  write(2, "    ", 4)               = 4
1083  write(2, "--progress", 10)        = 10
1083  write(2, "            force progress reporting\n", 37) = 37
1083  write(2, "    ", 4)               = 4
1083  write(2, "--reject-shallow", 16)  = 16
1083  write(2, "      don't clone shallow repository\n", 37) = 37
1083  write(2, "    ", 4)               = 4
1083  write(2, "-n", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--no-checkout", 13)     = 13
1083  write(2, "     don't create a checkout\n", 29) = 29
1083  write(2, "    ", 4)               = 4
1083  write(2, "--bare", 6)             = 6
1083  write(2, "                create a bare repository\n", 41) = 41
1083  write(2, "    ", 4)               = 4
1083  write(2, "--mirror", 8)           = 8
1083  write(2, "              create a mirror repository (implies bare)\n", 56) = 56
1083  write(2, "    ", 4)               = 4
1083  write(2, "-l", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--local", 7)            = 7
1083  write(2, "           to clone from a local repository\n", 44) = 44
1083  write(2, "    ", 4)               = 4
1083  write(2, "--no-hardlinks", 14)    = 14
1083  write(2, "        don't use local hardlinks, always copy\n", 47) = 47
1083  write(2, "    ", 4)               = 4
1083  write(2, "-s", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--shared", 8)           = 8
1083  write(2, "          setup as shared repository\n", 37) = 37
1083  write(2, "    ", 4)               = 4
1083  write(2, "--recurse-submodules", 20) = 20
1083  write(2, "[=<pathspec>]", 13)     = 13
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          initialize submodules in the clone\n", 61) = 61
1083  write(2, "    ", 4)               = 4
1083  write(2, "--recursive", 11)       = 11
1083  write(2, " ...", 4)               = 4
1083  write(2, "       ", 7)            = 7
1083  write(2, "alias of --recurse-submodules", 29) = 29
1083  write(2, "\n", 1)                 = 1
1083  write(2, "    ", 4)               = 4
1083  write(2, "-j", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--jobs", 6)             = 6
1083  write(2, " <n>", 4)               = 4
1083  write(2, "        number of submodules cloned in parallel\n", 48) = 48
1083  write(2, "    ", 4)               = 4
1083  write(2, "--template", 10)        = 10
1083  write(2, " <template-directory>", 21) = 21
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          directory from which templates will be used\n", 70) = 70
1083  write(2, "    ", 4)               = 4
1083  write(2, "--reference", 11)       = 11
1083  write(2, " <repo>", 7)            = 7
1083  write(2, "    reference repository\n", 25) = 25
1083  write(2, "    ", 4)               = 4
1083  write(2, "--reference-if-able", 19) = 19
1083  write(2, " <repo>", 7)            = 7
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          reference repository\n", 47) = 47
1083  write(2, "    ", 4)               = 4
1083  write(2, "--dissociate", 12)      = 12
1083  write(2, "          use --reference only while cloning\n", 45) = 45
1083  write(2, "    ", 4)               = 4
1083  write(2, "-o", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--origin", 8)           = 8
1083  write(2, " <name>", 7)            = 7
1083  write(2, "   use <name> instead of 'origin' to track upstream\n", 52) = 52
1083  write(2, "    ", 4)               = 4
1083  write(2, "-b", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--branch", 8)           = 8
1083  write(2, " <branch>", 9)          = 9
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          checkout <branch> instead of the remote's HEAD\n", 73) = 73
1083  write(2, "    ", 4)               = 4
1083  write(2, "-u", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--upload-pack", 13)     = 13
1083  write(2, " <path>", 7)            = 7
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          path to git-upload-pack on the remote\n", 64) = 64
1083  write(2, "    ", 4)               = 4
1083  write(2, "--depth", 7)            = 7
1083  write(2, " <depth>", 8)           = 8
1083  write(2, "       create a shallow clone of that depth\n", 44) = 44
1083  write(2, "    ", 4)               = 4
1083  write(2, "--shallow-since", 15)   = 15
1083  write(2, " <time>", 7)            = 7
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          create a shallow clone since a specific time\n", 71) = 71
1083  write(2, "    ", 4)               = 4
1083  write(2, "--shallow-exclude", 17) = 17
1083  write(2, " <revision>", 11)       = 11
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          deepen history of shallow clone, excluding rev\n", 73) = 73
1083  write(2, "    ", 4)               = 4
1083  write(2, "--single-branch", 15)   = 15
1083  write(2, "       clone only one branch, HEAD or --branch\n", 47) = 47
1083  write(2, "    ", 4)               = 4
1083  write(2, "--no-tags", 9)          = 9
1083  write(2, "             don't clone any tags, and make later fetches not to follow them\n", 77) = 77
1083  write(2, "    ", 4)               = 4
1083  write(2, "--shallow-submodules", 20) = 20
1083  write(2, "  any cloned submodules will be shallow\n", 40) = 40
1083  write(2, "    ", 4)               = 4
1083  write(2, "--separate-git-dir", 18) = 18
1083  write(2, " <gitdir>", 9)          = 9
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          separate git dir from working tree\n", 61) = 61
1083  write(2, "    ", 4)               = 4
1083  write(2, "-c", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--config", 8)           = 8
1083  write(2, " <key=value>", 12)      = 12
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          set config inside the new repository\n", 63) = 63
1083  write(2, "    ", 4)               = 4
1083  write(2, "--server-option", 15)   = 15
1083  write(2, " <server-specific>", 18) = 18
1083  write(2, "\n", 1)                 = 1
1083  write(2, "                          option to transmit\n", 45) = 45
1083  write(2, "    ", 4)               = 4
1083  write(2, "-4", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--ipv4", 6)             = 6
1083  write(2, "            use IPv4 addresses only\n", 36) = 36
1083  write(2, "    ", 4)               = 4
1083  write(2, "-6", 2)                 = 2
1083  write(2, ", ", 2)                 = 2
1083  write(2, "--ipv6", 6)             = 6
1083  write(2, "            use IPv6 addresses only\n", 36) = 36
1083  write(2, "    ", 4)               = 4
1083  write(2, "--filter", 8)           = 8
1083  write(2, " <args>", 7)            = 7
1083  write(2, "       object filtering\n", 24) = 24
1083  write(2, "    ", 4)               = 4
1083  write(2, "--remote-submodules", 19) = 19
1083  write(2, "   any cloned submodules will use their remote-tracking branch\n", 63) = 63
1083  write(2, "    ", 4)               = 4
1083  write(2, "--sparse", 8)           = 8
1083  write(2, "              initialize sparse-checkout file to include only files at root\n", 76) = 76
1083  write(2, "\n", 1)                 = 1
1083  exit_group(129)                   = ?
1083  +++ exited with 129 +++
